import {
  AfterViewInit,
  Component,
  Input,
  OnInit,
  ViewChild,
} from '@angular/core';
import { NgxSpinnerModule, NgxSpinnerService } from 'ngx-spinner';
import { HttpClient } from '@angular/common/http';
import { MatTooltip, MatTooltipModule } from '@angular/material/tooltip';

@Component({
  selector: 'loading-view',
  standalone: true,
  imports: [NgxSpinnerModule, MatTooltipModule],
  templateUrl: '../components_html/loading.component.html',
  styleUrl: '../components_css/loading.component.css',
})
export class LoadingComponent implements OnInit {
  @Input() loadingMessage: string = '';
  @ViewChild('tooltip') tooltip!: MatTooltip;
  randomFunFacts: string[] = [];
  randomIndex = 0;
  numFacts = 15;

  loadingTooltip = 'Fun fact! These fun facts were generated by Gemini!';

  constructor(private spinner: NgxSpinnerService, private http: HttpClient) {}

  ngOnInit() {
    this.spinner.show();
    this.randomIndex = 0;
    this.http.get<string[]>('assets/fun_facts.json').subscribe({
      next: (data) => {
        this.randomFunFacts = this.getRandomFacts(data, this.numFacts);
        setInterval(() => {
          this.randomIndex += 1;
          this.randomIndex %= this.randomFunFacts.length;
        }, 10000);
      },
    });
  }

  ngAfterViewInit() {
    let bgAudio = document.getElementById("bgAudio") as HTMLAudioElement;
    bgAudio.volume = .08;
  }

  getRandomFacts(facts: string[], count: number): string[] {
    const shuffled = [...facts];
    for (let i = shuffled.length - 1; i > 0; i--) {
      const j = Math.floor(Math.random() * (i + 1));
      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];
    }
    return shuffled.slice(0, count);
  }
}
